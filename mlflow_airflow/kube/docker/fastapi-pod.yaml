# apiVersion: v1
# kind: Namespace
# metadata:
#   name: server  
# ---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fastapi-server
  namespace: projet-mlops
spec:
  storageClassName: local-path
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
    namespace: projet-mlops
    name: fastapi-server
  hostPath:
    # path: "/home/davy/kub/server/test/app"  si lanc√© dans VM Linux
    path: "/mnt/host/c/Users/lordb/OneDrive/Documents/PTP/Projet MLOps/Projet_MLOps_accidents/mlflow_airflow/kube/docker/data_server"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fastapi-server
  namespace: projet-mlops
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-server-nodeport
  namespace: projet-mlops
spec:
  type: NodePort
  selector:
    app: fastapi-server
  ports:
  - protocol: TCP
    port: 6300
    targetPort: 6300
    nodePort: 31234
---
apiVersion: v1
kind: Pod
metadata:
  name: fastapi-server
  labels:
    app: fastapi-server
  namespace: projet-mlops
spec:
  restartPolicy: Never
  containers:
    - name: fastapi
      image: lordbelasco/fastapi-server:latest
      # command: ["uvicorn"]
      # args: ["main:app", "--host", "0.0.0.0", "--port", "6300"]
      command: ["python"]
      args: ["server_launch.py"]         
      # resources:
      #   requests:
      #     memory: "64Mi"
      #     cpu: "50m"
      #   limits:
      #     memory: "128Mi"
      #     cpu: "250m"
      ports:
        - containerPort: 6300
          protocol: TCP
      volumeMounts:
        - name: fastapi-server
          mountPath: /app/data
      # env:
      #   - name: MYSQL_ROOT_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: mysql-secrets
      #         key: mysql-root-password
  volumes:
    - name: fastapi-server
      persistentVolumeClaim:
        claimName: fastapi-server